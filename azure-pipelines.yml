# Android

# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

pool:
  vmImage: 'macOS-10.13'

steps:
- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'

- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug test'
  displayName: gradlew assembleDebug test

- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: Copy .apk files to artifact staging directory

- task: CmdLine@2
  inputs:
    script: |
      echo Testing Rename
      
      echo #Steps 
      
      cd app/build/outputs/apk/debug
      
      ls
      
      mv /Users/runner/runners/2.163.1/work/1/a/app/build/outputs/apk/debug/test1-debug.apk test_$(date +%Y_%m_%d)-debug.apk

      ls

      cd

      cd /Users/runner/runners/2.163.1/work/1/a/app/build/outputs/apk/debug/

      rm /Users/runner/runners/2.163.1/work/1/a/app/build/outputs/apk/debug/test1-debug.apk

      ls


- task: CopyFiles@2
  inputs:
    Contents: '**/*.apk'
    TargetFolder: '$(build.artifactStagingDirectory)'

- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: Copy 2 name

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'drop'
    publishLocation: 'pipeline'